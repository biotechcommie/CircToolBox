"""Initial migration

Revision ID: bf39aa105014
Revises: 
Create Date: 2025-02-10 02:27:28.445195

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bf39aa105014'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bioprojects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bioproject_id', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bioprojects_bioproject_id'), 'bioprojects', ['bioproject_id'], unique=True)
    op.create_table('users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('id', sa.dialects.postgresql.UUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('pipelines',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('pipeline_name', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'running', 'completed', 'failed', name='pipeline_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resources',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('resource_type', sa.Enum('GENOME', 'ANNOTATION', 'REFERENCE', name='resource_type_enum'), nullable=False),
    sa.Column('species', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_resource_type', 'resources', ['resource_type'], unique=False)
    op.create_table('srr_resources',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bioproject_id', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('srr_id', sa.String(), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=15), nullable=False),
    sa.ForeignKeyConstraint(['bioproject_id'], ['bioprojects.bioproject_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_srr_resources_bioproject_id'), 'srr_resources', ['bioproject_id'], unique=False)
    op.create_index(op.f('ix_srr_resources_file_path'), 'srr_resources', ['file_path'], unique=False)
    op.create_index(op.f('ix_srr_resources_srr_id'), 'srr_resources', ['srr_id'], unique=True)
    op.create_table('pipeline_configs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('pipeline_id', sa.UUID(), nullable=True),
    sa.Column('config_type', sa.Enum('initial', 'final', name='config_type_enum'), nullable=False),
    sa.Column('config_data', sa.JSON(), nullable=False),
    sa.Column('config_file_path', sa.String(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipelines.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pipeline_resources',
    sa.Column('pipeline_id', sa.UUID(), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipelines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['resource_id'], ['resources.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pipeline_id', 'resource_id')
    )
    op.create_table('pipeline_steps',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('pipeline_id', sa.UUID(), nullable=True),
    sa.Column('step_name', sa.String(length=100), nullable=False),
    sa.Column('parameters', sa.JSON(), nullable=False),
    sa.Column('requires_input_file', sa.String(), nullable=False),
    sa.Column('input_files', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'running', 'completed', 'failed', name='step_status'), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.Column('input_mapping', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipelines.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pipeline_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('pipeline_id', sa.UUID(), nullable=True),
    sa.Column('step_id', sa.UUID(), nullable=True),
    sa.Column('logs', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pipeline_id'], ['pipelines.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['step_id'], ['pipeline_steps.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pipeline_logs')
    op.drop_table('pipeline_steps')
    op.drop_table('pipeline_resources')
    op.drop_table('pipeline_configs')
    op.drop_index(op.f('ix_srr_resources_srr_id'), table_name='srr_resources')
    op.drop_index(op.f('ix_srr_resources_file_path'), table_name='srr_resources')
    op.drop_index(op.f('ix_srr_resources_bioproject_id'), table_name='srr_resources')
    op.drop_table('srr_resources')
    op.drop_index('idx_resource_type', table_name='resources')
    op.drop_table('resources')
    op.drop_table('pipelines')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_bioprojects_bioproject_id'), table_name='bioprojects')
    op.drop_table('bioprojects')
    # ### end Alembic commands ###
