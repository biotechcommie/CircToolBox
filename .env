# circ_toolbox_project/.env

# ---------------------------
# Project Configuration
# ---------------------------

# The base directory of the project (used internally in scripts)
PROJECT_ROOT=./circ_toolbox

# ---------------------------
# Database Configuration (SQLite)
# ---------------------------
# DATABASE_FILENAME=resources.db
# DATABASE_DIR=./circ_toolbox/backend/database
# DATABASE_URL=sqlite+aiosqlite:///./circ_toolbox/backend/database/resources.db

# ---------------------------
# Database Configuration (PostgreSQL)
# ---------------------------
# PostgreSQL database connection
DATABASE_URL=postgresql+asyncpg://appuser:apppassword@localhost:5432/circ_toolbox_db
# PostgreSQL configuration
# Superuser (Admin)
POSTGRES_SUPERUSER=postgres
POSTGRES_SUPERPASS=supersecret

# Application Database User
POSTGRES_USER=appuser
POSTGRES_PASSWORD=apppassword

POSTGRES_DB=circ_toolbox_db
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
PGDATA_DIR=./circ_toolbox/backend/database/pgdata

# ---------------------------
# Security Configuration
# ---------------------------
SECRET_KEY=supersecretkey123
JWT_ALGORITHM=HS256
# Token expiration time (1 hour)
JWT_LIFETIME_SECONDS=3600
# Change in production
PASSWORD_SALT=some_salt_for_passwords

# ---------------------------
# Logging Configuration
# ---------------------------
# Options: debug, info, warning, error, critical
LOG_LEVEL=info
LOG_DIR=./circ_toolbox/logs
LOG_FILE=./circ_toolbox/logs/application.log
LOG_CONFIG_PATH=./circ_toolbox/backend/config/logging_config.yaml

# ---------------------------
# File Storage Directories
# ---------------------------
# Location of static resources
RESOURCE_DIR=./circ_toolbox/resources
# User-generated data storage
USER_OUTPUT_DIR=./circ_toolbox/user_outputs
SRA_DIR=./circ_toolbox/SRA

# ---------------------------
# Alembic Database Migrations
# ---------------------------
ALEMBIC_INI_PATH=./circ_toolbox/backend/database/alembic.ini
ALEMBIC_MIGRATION_VERSION_PATH=./circ_toolbox/backend/database/migrations/versions

# ---------------------------
# Backend API Configuration
# ---------------------------
API_HOST=127.0.0.1
API_PORT=8000
# Number of worker processes
API_WORKERS=4

# ---------------------------
# Frontend Configuration
# ---------------------------
FRONTEND_DIR=./circ_toolbox/frontend
FRONTEND_PORT=3000
FRONTEND_BUILD_DIR=./circ_toolbox/frontend/build

# ---------------------------
# CORS Configuration
# ---------------------------
ALLOW_ORIGINS=http://localhost:5173
ALLOW_METHODS=*
ALLOW_HEADERS=*

#Authorization,Content-Type

# http://localhost:3000,http://127.0.0.1:3000,


# ---------------------------
# Celery + Redis Configuration
# ---------------------------

CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0
CELERY_CONCURRENCY=1  
# Ensures only one task runs at a time

# ---------------------------
# Email Configuration (Optional, if applicable)
# ---------------------------
EMAIL_HOST=smtp.yourmail.com
EMAIL_PORT=587
EMAIL_USERNAME=your-email@example.com
EMAIL_PASSWORD=your-email-password
EMAIL_FROM=your-email@example.com

# ---------------------------
# Environment Settings
# ---------------------------
# Set this to 'production' or 'development'
ENVIRONMENT=development
# Set to false in production - Use 1 for true, 0 for false
DEBUG=1  

# Set to false in production # Use 1 for true, 0 for false

# Explanation of Enhancements
# Project Root Variable (PROJECT_ROOT)
# 
# Defined to avoid repetitive paths and to make it easier to relocate the project.
# Used as a prefix for paths like database, logs, and outputs.

# Database Configuration
# 
# Includes DATABASE_DIR and DATABASE_FILENAME to allow for dynamic adjustments.
# DATABASE_URL automatically concatenates them for use in SQLAlchemy.

# Security Configuration
# 
# Added a PASSWORD_SALT for secure password hashing.
# Defined JWT algorithm explicitly to avoid inconsistencies.

# Logging Configuration
# 
# Added LOG_FILE for storing logs in an easy-to-find location.
# Uses absolute paths via ${PROJECT_ROOT} for better compatibility.

# File Storage
# 
# Unified resource and user output storage locations for easy access.

# Backend API Settings
# 
# API host and port are configurable.
# Workers define concurrency settings for production.

# Frontend Configuration
# 
# Defined the FRONTEND_DIR and its build path.

# CORS Configuration
# 
# Defined allowed origins, methods, and headers for security and frontend interaction.

# Email Configuration
# 
# Placeholder for SMTP settings if required later.

# Environment Settings
# 
# Added ENVIRONMENT and DEBUG flags for switching between development and production.
# 